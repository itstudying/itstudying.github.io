<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gomod on itstudying</title>
    <link>https://blog.itstudying.com/tags/gomod/</link>
    <description>Recent content in gomod on itstudying</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.itstudying.com/tags/gomod/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>gomod导入本地模块</title>
      <link>https://blog.itstudying.com/2020/gomod%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.itstudying.com/2020/gomod%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0%E6%A8%A1%E5%9D%97/</guid>
      <description>如果想要在一个模块中引入本地的另一个模块，可以使用replace方法来完成。
本地项目1：hsl-hq
code/hsl/hsl-hq . ├── README.md ├── go.mod ├── market │ ├── internal │ │ ├── hk │ │ │ ├── tradeday.go │ │ │ └── tradeday_test.go │ │ └── nohk │ │ ├── tradeday.go │ │ └── tradeday_test.go │ ├── tradeday.go │ └── tradeday_test.go └── vendor └── vendor.json  本地项目2：hk-search
code/hsl/hk-search . ├── Makefile ├── README.md ├── cmd │ ├── main.go └── src ├── serv │ ├── ma.go └── util └── util.</description>
    </item>
    
    <item>
      <title>gomod交叉编译cannot find module for path…</title>
      <link>https://blog.itstudying.com/2019/gomod%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91cannot_find_module_for_path/</link>
      <pubDate>Wed, 27 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.itstudying.com/2019/gomod%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91cannot_find_module_for_path/</guid>
      <description>gomod交叉编译cannot find module for path… 新建项目准备使用gomod管理依赖，而且项目没放在gopath的时候发现个问题，go build -o SI-Kline-Minute cmd/main.go能通过，GOOS=linux GOARCH=amd64 go build -o SI-Kline-Minute cmd/main.go进行交叉编译报找不到module错误
环境 项目结构
├── Makefile ├── README.md ├── SI-Kline-Minute ├── cmd │ └── main.go ├── common │ ├── db │ │ ├── mongo │ │ │ └── mongo.go │ │ └── redis │ ├── log │ │ └── logger.go │ └── utils │ └── utils.go ├── config │ └── config.go ├── config.toml ├── go.mod ├── go.</description>
    </item>
    
  </channel>
</rss>