<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jenkins on itstudying</title>
    <link>https://blog.itstudying.com/tags/jenkins/</link>
    <description>Recent content in jenkins on itstudying</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.itstudying.com/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>jenkins 跨机房自动部署方案</title>
      <link>https://blog.itstudying.com/2019/jenkins%E8%B7%A8%E6%9C%BA%E6%88%BF%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 14 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.itstudying.com/2019/jenkins%E8%B7%A8%E6%9C%BA%E6%88%BF%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/</guid>
      <description>jenkins 跨机房自动部署方案 嘿嘿，首先不进入正题。这两天趁着假期把笔记内容都给整理了一番，这些大多是平时写代码的总结，以及看过的一些文章的转载和笔记，数了一下大概将近150篇文章。每次V站上秀博客我的特想秀下我的域名，只是我现在这小站 itstudying 太简陋了点，空有外表,实际啥内容也没，只有个个人简介在里面。而且我还花钱买了个服务器挂着它，与其闲着它不用还不如把这些笔记整理下放上去，文章倒不是多牛逼，只是些自己的个人总结，所悟所思所想而已。
对于不同机房，网络互不相同情况下部署解决方法 正常情况下想要使用jenkins做自动化部署只需要安装Publish Over SSH插件即可，但是不同机房、网络不通得情况下就不能使用此插件了，像我们公司有三个机房，难道每个机房都配一个jenkins吗。。。又或者手动部署？？。。 也很奇怪网上没有合适的解决办法，可能是大佬们觉得问题太过简单了吧。
网络环境
在机房a中有台跳板机，登录a的机器和其他机房b,c的机器都需要通过此跳板机才能登录，jenkins是在a机房中。首先想到是在jenkins机器上设置ssh代理，但是测试下在jenkins机器上能正常登录到其他机房，但是jenkins部署时怎么着都不通，貌似是jenkins自己维护了一套ssh服务。所以尝试第二种方案，比如有以下两个文件需要部署至机房
config.toml main   新建两个辅助部署脚本deploy.sh和重启脚本restart.sh，将需部署的文件以及两个脚本先上传到跳板机器，  deploy.sh
#!/bin/bash function perform() { IP=$1 DIR=$2 PORT=$3 FILENAME=$4 ENV=$5 echo &amp;quot;scp config&amp;quot; scp ${PORT} ${DIR}${FILENAME} root@${IP}:/data/www/demo/_config.toml echo &amp;quot;scp main&amp;quot; scp ${PORT} ${DIR}_main root@${IP}:/data/www/demo/_main echo &amp;quot;scp restart&amp;quot; scp ${PORT} ${DIR}restart.sh root@${IP}:/data/www/demo/restart.sh echo &amp;quot;sh restart&amp;quot; ssh root@${IP} ${PORT,,} &amp;quot;sh /data/www/demo/restart.sh ${ENV}&amp;quot; echo &amp;quot;完成&amp;quot; } if [[ &amp;quot;$1&amp;quot; == &amp;quot;a&amp;quot; ]]; then echo &amp;quot;test start!</description>
    </item>
    
  </channel>
</rss>